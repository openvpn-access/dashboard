.inputField {
    @include flex(column);
    flex-shrink: 1;
    width: 100%;
}

.main {
    @include flex(row, center);
    @include size(100%, 2.5em);
    border-radius: 0.25em;
    transition: all 0.3s;
    border: 1.5px solid var(--com-color);
    position: relative;
    flex-shrink: 0;
    --com-color: var(--c-background-secondary-accent);
    --com-color-focus: var(--c-primary-focus);
    --com-color-hover: var(--c-background-secondary-hover);

    > bc-icon {
        margin-right: 0.5em;
        margin-left: 0.75em;
        color: var(--com-color);
        transition: all 0.3s;
    }

    > input {
        @include font(600, 13px);
        color: var(--c-text-primary);
        width: 100%;
        padding-right: 0.75em;

        &::placeholder {
            transition: all 0.3s;
            color: var(--com-color-hover);
        }

        &[disabled] {
            color: var(--c-text-disabled);
        }

        &[readonly] {
            cursor: default;
        }
    }

    &:hover:not(:focus-within):not([data-errored]):not([disabled]) {
        --com-color: var(--com-color-hover);
    }

    &:focus-within {
        @include focus_border(--com-color-focus);
        --com-color: var(--c-primary);
    }

    &[data-errored] {
        --com-color: var(--c-red);
        --c-primary-focus: var(--c-red-focus);
    }

    &.buttonLike {
        cursor: pointer;

        > input,
        > input[readonly] {
            cursor: pointer;
        }
    }
}

.error {
    @include font(600, 12px);
    line-height: 16px;
    margin-top: 0.2em;
    color: var(--c-red);
    white-space: pre-wrap;
    word-break: break-word;
    max-width: inherit;
}

.passwordQualityMeter {
    @include size(5px, calc(100% - 0.75em));
    margin: 0 0.5em;
    position: relative;
    border-radius: 10em;
    background: hsl(calc(var(--pwd-entropy) * 120), 75%, 50%);
    clip-path: inset(calc((1 - var(--pwd-entropy)) * 100%) 0 0 0);
    transition: all 0.3s;
}
